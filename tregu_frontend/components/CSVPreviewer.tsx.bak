'use client'
import { useState } from 'react'

const API = process.env.NEXT_PUBLIC_API_URL || ''

function parseCSV(text: string) {
  const lines = text.split(/\r?\n/).filter(Boolean)
  const rows = lines.map(l=>l.split(','))
  return rows
}

export default function CSVPreviewer(){
  const [rows, setRows] = useState<string[][]>([])
  const [busy, setBusy] = useState(false)
  async function onPick(e: React.ChangeEvent<HTMLInputElement>){
    const f = e.target.files?.[0]; if(!f) return
    const text = await f.text()
    setRows(parseCSV(text))
  }
  async function upload(){
    if (!rows.length) return
    setBusy(true)
    try {
      const blob = new Blob([rows.map(r=>r.join(',')).join('\n')], { type:'text/csv' })
      const fd = new FormData(); fd.append('file', blob, 'catalog.csv')
      if (API) {
        try { await fetch(${API}/files/upload, { method:'POST', body: fd }) } catch {}
      }
      if (typeof window !== 'undefined') localStorage.setItem('tregu:catalog:last', JSON.stringify(rows.slice(0,200)))
    } finally { setBusy(false) }
  }
  return (
    <div className="space-y-3">
      <input type="file" accept="text/csv,.csv" onChange={onPick} />
      {rows.length>0 && (
        <div className="rounded-2xl border">
          <div className="max-h-72 overflow-auto">
            <table className="w-full text-sm">
              <tbody>
                {rows.slice(0,100).map((r,i)=> (
                  <tr key={i} className={i%2? 'bg-slate-50' : ''}>
                    {r.map((c,j)=>(<td key={j} className="p-2 border-r">{c}</td>))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          <div className="flex items-center justify-between p-3 text-sm">
            <span>{rows.length} rows</span>
            <button onClick={upload} className="rounded-xl bg-[var(--brand,#2563eb)] px-3 py-2 text-white" disabled={busy}>
              {busy? 'Uploadingâ€¦' : 'Save / Upload'}
            </button>
          </div>
        </div>
      )}
    </div>
  )
}